@using Datamarka_DomainModel.Models.ECommerce
@using Datamarka_MVC.Controllers
@using System.Linq
@model Product;

<h2>Edit Product</h2>

<!--Form for editing product-->
@using (Html.BeginForm(
					actionName: nameof(ProductController.Edit),
					controllerName: Html.ViewContext.RouteData.Values["controller"].ToString(),
					FormMethod.Post))
{
	@Html.AntiForgeryToken()
	<div class="form-group">
		@Html.LabelFor(m => m.Name, new { @class = "form-label m-2" })
		@Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.GTIN, new { @class = "form-label m-2" })
		@Html.TextBoxFor(model => model.GTIN, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.GTIN, "", new { @class = "text-danger" })
	</div>

	<div class="form-group">
		@Html.LabelFor(m => m.KPR, new { @class = "form-label m-2" })
		@Html.TextBoxFor(model => model.KPR, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.KPR, "", new { @class = "text-danger" })
	</div>

	<div class="row">
		<div class="col">
			@Html.LabelFor(m => m.CountInPack, new { @class = "form-label m-2" })
			@Html.TextBoxFor(m => m.CountInPack, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.CountInPack, "", new { @class = "text-danger" })
		</div>

		<div class="col">
			@Html.LabelFor(m => m.CountInPallet, new { @class = "form-label m-2" })
			@Html.TextBoxFor(m => m.CountInPallet, new { @class = "form-control" })
			@Html.ValidationMessageFor(m => m.CountInPallet, "", new { @class = "text-danger" })
		</div>
	</div>

	//submit button
	<div class="form-group">
		<input type="submit" value="Edit" class="btn btn-success m-2" />
	</div>
	<div class="form-group">
		<a href="@Url.Action(nameof(ProductController.Index))" class="card-link">Back to list</a>
	</div>

}