@using Datamarka_DomainModel.Models.ECommerce
@using Datamarka_MVC.Controllers
@using Datamarka_MVC.Enums
@using System.Linq
@model Product;

<h2>Добавить продукт</h2>

<!--Form for adding product-->
@using (Html.BeginForm(
			actionName: nameof(ProductController.Create),
			controllerName: Html.ViewContext.RouteData.Values["controller"].ToString(),
			FormMethod.Post))
{
	@Html.AntiForgeryToken()

	<div class="form-group">
		@Html.LabelFor(m => m.Name, "Наименование*:", new { @class = "form-label m-2 fw-bold" })
		@Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
	</div>
	
	<div class="form-group">
		@Html.LabelFor(m => m.GTIN, "GTIN*:", new { @class = "form-label m-2 fw-bold" })
		@Html.TextBoxFor(model => model.GTIN, new { @class = "form-control" })
	</div>
	
	<div class="form-group">
		@Html.LabelFor(m => m.KPR, "Внутренний код:", new { @class = "form-label m-2 fw-bold" })
		@Html.TextBoxFor(model => model.KPR, new { @class = "form-control" })
	</div>
	
	<div class="form-group">
		@Html.LabelFor(m => m.BestBeforedays, "Годен, суток:", new { @class = "form-label m-2 fw-bold" })
		@Html.TextBoxFor(model => model.BestBeforedays, new { @class = "form-control" })
	</div>



	<div class="row">

		<div class="col">
			@Html.LabelFor(model => model.CountInPack, "Кол-во в упаковке*", new { @class = "form-label m-2 fw-bold" })
			@Html.TextBoxFor(model => model.CountInPack, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.CountInPack, "", new { @class = "text-danger" })
		</div>

		<div class="col">
			@Html.LabelFor(model => model.CountInPallet, "Кол-во на паллете*", new { @class = "form-label m-2 fw-bold" })
			@Html.TextBoxFor(model => model.CountInPallet, new { @class = "form-control" })
			@Html.ValidationMessageFor(model => model.CountInPallet, "", new { @class = "text-danger" })
		</div>

	</div>


	//submit button
	<div class="form-group">
		<input type="submit" value="Добавить" class="btn btn-success m-2" />
	</div>

}