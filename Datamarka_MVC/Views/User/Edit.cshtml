@using Datamarka_BLL.Contracts.Identity
@using Datamarka_DomainModel.Models.Identity
@using Datamarka_MVC.Controllers.Identity
@using System.Linq
@using Datamarka_MVC.DataTransferObjects.Identity
@model UserBriefDTO;

<h2>Редактировать пользователя</h2>

<!--Form for adding employee-->
@using (Html.BeginForm(
			actionName: nameof(UserController.Edit),
			controllerName: "User",
			FormMethod.Post))
{
	@Html.AntiForgeryToken()


	//User Email
	<div class="form-group">
		@Html.LabelFor(model => model.UserName, new { @class = "form-label m-2 fw-bold" })
		@Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
		@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
	</div>

	//User Role
	<div class="form-group">
		@Html.LabelFor(model => model.Role, new { @class = "form-label m-2" })
		@Html.DropDownListFor(model => model.Role,
                Html.GetEnumSelectList<UserRoleEnum>(),
				null,
				new { @class = "form-select" })
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.Password, new { @class = "form-label m-2 fw-bold" })
		@Html.PasswordFor(model => model.Password, new { @class = "form-control" })
		@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
	</div>
	
	<div class="form-group">
		@Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label m-2 fw-bold" })
		@Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
		@Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
	</div>

	//submit button
	<div class="form-group">
		<input type="submit" value="Save changes" class="btn btn-success m-2" />
	</div>

}